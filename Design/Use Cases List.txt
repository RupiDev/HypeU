Actors
	- Guest
	- Client User
	- Event Admin User
	- University
	- Database (Computer Actor)

Use Cases
	- Read access (guest/user both)
*1		1.  Query ("discover") events for university
*2		2.  Search for events in university by text
			- Full text search (name, organization name, location)
			- Sorted by date/time
			- Non-functional requirement: accuracy of search
*3		3.  Search for events in university by one or more categories
			- More than one category can be specified
		4.  Query list of universities in alphabetical order
*4		5.  Query list of univserities by location
			- User location would be necessary
		6.  Query email address domain for specific university
			- Matches university to @<domain>.edu

	- User account
*5		7.  Create account
			- Email username, password, name, university required
			- Combine email username with university domain to get full email address
			- Need to check that email isn't taken by another User
			- Need to check security on password (uppercase letter, lowercase letter, length, special symbol, etc.)
			- Need to send verification for account via email
			- Need to hash passwords
			- Validate universities in database
*6		8.  Login
			- Email and password required
			- Need to check that email for User exists in database
			- Need to check that password matches the email for User
			- Need to generate auth token for authentification
		9.  Login but logged in elsewhere (token already exists)
			- Generate new auth token and invalidate existing token
*7		10. Logout
			- Delete auth token for User
		11. Forgot password
			- Need to check for valid email address
			- Send password reset link to email with token
			- Password reset token needs to expire

	- User signed in
		- Need to check email is valid
		- Need to check user auth token is valid for email
*8		12. Query information for profile
			- Name, university, etc
			- List of followed organizations and events
			- List of organizations user is admin for
		13. Change password
			- Need to verify old password
			- Need to check security on new password
		14. Delete account
			- Removes all references from tables and x-tables
*9		15. Follow organization
			- Need to verify user is part of organization's university
*10		16. Follow event
			- Need to verify user is part of event's university
*11		17. Create an organization
			- Organization email, password, organization name required
			- Need to check that email isn't taken by another organization
			- Need to check security on password (uppercase letter, lowercase letter, length, special symbol, etc.)
			- Need to send verification for account via email

	- User signed in, is an admin for organization(s)
		- Need to check email is valid
		- Need to check user auth token is valid for email
		- Need to check user is an admin for organization
		18. Change organization email address
			- Need to check that email isn't taken by another organization
			- Need to send verification for account via email
*12		19. Add user as admin
			- Email username required (only username)
			- Combine email username with university domain to get full email address
			- Need to send confirmation email to user
*13		20. Remove user as admin
			- Any admin has this power
			- Users should be able to remove themselves
*14		21. Create an event
			- Event name, date required
			- Location, time, description, image optional
*15		22. Update event details
			- Can change event name, location, date, time, description, image
*16		23. Delete event
		
------------------------------------------------------------------------------------

Future updates

- Push notifications
- Posting messages to event page for updates (rather than just updating description)

------------------------------------------------------------------------------------

UX notes

- When logged out, "profile" tab should be a "sign in/sign up" button
- Default "discover" view should show all events, even when logged in
    - One of the categories for filtering should be "all followed organizations"
    - This category should be remembered, so next time a user opens the app they don't
      have to activate it again
- Users can create an organization, for which they become an admin
- Make sure people know that you can make an organization after logging in
	- Make the "new organization" button promininent?
- Time and location for creating an event can have TBD option, date is required
- Organization page should have button to contact organizations via email
- Event location should link to maps app
	
------------------------------------------------------------------------------------

3) A User searches for an event
5) Sign up as a normal user (Back + front) (security?) (name = bad names?) (same thing for organization)
	Need Email (Back)
	Need Password (Back)
	Confirm Pasword (Back)
	Name (Back)
	List of Universities (Drop Down, don't user select)

6) Sign up as a group organizer (Back + front)
7) Checking if the user is valid (BackEnd)
8) Checking if the password for that specific user is valid (BackEnd)
9) Checking if the user doesn't already exist if you make an account (BackEnd)
10) Load all the information related to user when user signs in (BackEnd)
11) Make all the user's information appear on the profile screen (Front + Back)
12) Retrieve events by school in discover (Front + Back)
13) Retrieve events by filters by school in discover (front + back)
14) Retrieve events by searching for specific events (front + back)
15) Retrieve events by searching for specific groups (front + back)
16) Clicking the group or event (2 cases) in search page in order to go that specific event's or profile of group (front + back)
17) Profile Screen (Load up information specific to the user)
18) Changing password for account = backend
19) Changing universities for account = backend
20) Dropping out of university = backend
21) Logging out of yoru account = backend

Groups

22) Getting information in order to post an event
	Writing a event name (backend + front) + (bad names?)
	Location (backend + front)
	Date and Time (backedn + front)
	about (200 Characters not enough) = read more (500 characters)

23) Posting the event with all the data associated with 22, and saves it to the database (Mostly backend)
24) Profile getting bio information from database
25) Profile getting events that the group made.


